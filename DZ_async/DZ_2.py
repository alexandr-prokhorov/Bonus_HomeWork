# Описание задачи:
# Напишите программу, которая имитирует работу системы уведомлений. Система
# должна асинхронно отправлять уведомления разным пользователям с разными
# задержками.
# Указания:
# 1. Создайте функцию send_notification(user, delay), которая принимает имя
# пользователя (user) и задержку (delay) в секундах.
# o Функция должна:
# ▪ Выводить сообщение о начале отправки уведомления.
# ▪ Использовать await asyncio.sleep(delay) для имитации времени
# отправки.
# ▪ Выводить сообщение о завершении отправки уведомления.
# 2. В основной функции программы:
# o Создайте список пользователей и задержек отправки, например:
# users = [("Alice", 2), ("Bob", 3), ("Charlie", 1), ("Diana", 4)]
# o Для каждого пользователя создайте асинхронную задачу с
# помощью asyncio.create_task.
# o Используйте asyncio.gather, чтобы запустить все задачи одновременно.
# o Используйте asyncio.run() для запуска программы.
# Ожидаемый результат:
# Программа должна конкурентно отправлять уведомления, и сообщения о начале и
# завершении отправки будут появляться в случайном порядке, соответствующем
# задержкам.
# Пример вывода программы
# Начинаю отправку уведомления для Alice...
# Начинаю отправку уведомления для Bob...
# Начинаю отправку уведомления для Charlie...
# Начинаю отправку уведомления для Diana...
# Уведомление для Charlie отправлено!
# Уведомление для Alice отправлено!
# Уведомление для Bob отправлено!
# Уведомление для Diana отправлено!

import asyncio


async def send_email(recipient, delay):
    print(f'Начинаю отправку письма для {recipient}...')
    await asyncio.sleep(delay)
    print(f'Письмо для {recipient} отправлено!')


async def main():
    recipients = [
        ("Alice", 2),
        ("Bob", 3),
        ("Charlie", 1),
        ("Diana", 4)
    ]

    if not recipients:
        print('Ваш список пользователей пуст!')
    else:
        tasks = []

        for recipient, delay in recipients:
            task = asyncio.create_task(send_email(recipient, delay))
            tasks.append(task)

        await asyncio.gather(*tasks)


asyncio.run(main())
